-- This example is due to Ilya Klyuchnikov.

-- This sample shows transforming a binary function into a unary one.

-- Suppose that non-negative integers are represented as
--    Z, S(Z), S(S(Z)), S(S(S(Z))), ...
-- The function `eq` tests two numbers for equality. And eq(S(S(Z)), x)
-- returns True iff its argument is equal to S(S(Z)).
-- SPSC specializes `eq` with respect to its first argument (equal to S(S(Z)),
-- to produce a unary function.
-- We may consider `eq` as an interpreter, its first argument being
-- a "known program" in the "language of non-negative integers", and
-- the second argument "unknown input data". Then the function eqS1 produced
-- by SPSC can be considered as the result of "compiling the program S(S(Z))"
-- to a program written in the language SPSC deals with.
-- An example of the "first Futamura projection"...

eq(S(S(Z)), x)
where

eq(Z, y) = eqZ(y);
eq(S(x), y) = eqS(y, x);
eqZ(Z) = True;
eqZ(S(x)) = False;
eqS(Z, x) = False;
eqS(S(y), x) = eq(x, y);
